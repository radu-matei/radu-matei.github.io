<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on radu&#39;s blog</title>
    <link>https://radu-matei.com/tags/github/</link>
    <description>Recent content in Github on radu&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Radu Matei</copyright>
    <lastBuildDate>Tue, 17 Sep 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://radu-matei.com/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cross platform GitHub Action for downloading, extracting, and adding tools to path</title>
      <link>https://radu-matei.com/blog/github-action-cross-plat-configure-tools/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://radu-matei.com/blog/github-action-cross-plat-configure-tools/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://radu-matei.com/img/article-photos/building-github-actions/actions-logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ever since I started to use GitHub Actions, one of the tasks I copy and pasted the most contained the following steps:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;download a file or an archive containing a statically compiled tool&lt;/li&gt;&#xA;&lt;li&gt;extract if it is an archive&lt;/li&gt;&#xA;&lt;li&gt;copy the target tool to a directory in the path&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;And after an embarrassing number of tries, my jobs would contain a step that would resemble the following (taken from an actual GitHub Action):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Reusable GitHub Actions in TypeScript, using the official toolkit</title>
      <link>https://radu-matei.com/blog/building-github-actions/</link>
      <pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://radu-matei.com/blog/building-github-actions/</guid>
      <description>GitHub Actions now supports CI/CD - and while the workers for Actions come pre-configured with support for lots of programming languages and frameworks, you have the option to use an existing action to configure the environment, or build your own. In this article we will see how to build reusable actions using the Actions toolkit</description>
    </item>
    <item>
      <title>Running Kubernetes end-to-end tests with Kind and GitHub Actions</title>
      <link>https://radu-matei.com/blog/kubernetes-e2e-github-actions/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://radu-matei.com/blog/kubernetes-e2e-github-actions/</guid>
      <description>Using Kubernetes in Docker in GitHub Actions</description>
    </item>
  </channel>
</rss>

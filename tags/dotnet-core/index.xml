<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnet-Core on radu&#39;s blog</title>
    <link>https://radu-matei.com/tags/dotnet-core/</link>
    <description>Recent content in Dotnet-Core on radu&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>radu@matei.ai (Radu Matei)</managingEditor>
    <webMaster>radu@matei.ai (Radu Matei)</webMaster>
    <copyright>Radu Matei</copyright>
    <lastBuildDate>Mon, 02 Sep 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://radu-matei.com/tags/dotnet-core/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building self-contained, single executable .NET Core 3 CLI tools</title>
      <link>https://radu-matei.com/blog/self-contained-dotnet-cli/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/self-contained-dotnet-cli/</guid>
      <description>This is the .NET Coreâ€™s first iteration at self-contained binaries. It is not ideal - the resulting size of ~40M is probably way too large for simple applications. But the fact that now we can actually create a global tool with .NET and distribute it without requiring users to install .NET is extremely exciting! Not to mention the ease of packaging applications in containers, and not having to copy tens of files.</description>
    </item>
    <item>
      <title>Writing controllers for Kubernetes CRDs with C#</title>
      <link>https://radu-matei.com/blog/kubernetes-controller-csharp/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/kubernetes-controller-csharp/</guid>
      <description>The goal of this article is to show you how to use the Kubernetes C# client to write extremely simple controllers for your Kubernetes custom resources, and start watching resources in a few lines of C#</description>
    </item>
    <item>
      <title>Getting started with SignalR Alpha 2</title>
      <link>https://radu-matei.com/blog/signalr-core/</link>
      <pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/signalr-core/</guid>
      <description>In this article we will explore how to get started with the Alpha 2 version of SignalR for ASP.NET Core 2.0 and understand streaming, sending binary data, using the Redis scaleout and, of course, chat!</description>
    </item>
    <item>
      <title>Real-Time ASP .NET Core</title>
      <link>https://radu-matei.com/blog/real-time-aspnet-core/</link>
      <pubDate>Sat, 18 Feb 2017 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/real-time-aspnet-core/</guid>
      <description>We will write an ASP.NET Core middleware for providing real-time functionality to your applications. To its core, this is a WebSockets middleware for ASP .NET Core applications with TypeScript / JavaScript and .NET clients - all this wile exploring the inner workings of ASP.NET Core middleware.</description>
    </item>
    <item>
      <title>Creating a WebSockets middleware for ASP .NET Core 3</title>
      <link>https://radu-matei.com/blog/aspnet-core-websockets-middleware/</link>
      <pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-websockets-middleware/</guid>
      <description>We&amp;rsquo;ll explore the low-level websockets API in .NET Core, understand the Middleware concept and finally write a websocket manager middleware that handles communication between various clients and your ASP.NET Core application.</description>
    </item>
    <item>
      <title>Dockerizing an ASP.NET Core application with GitHub, Docker Cloud and Azure</title>
      <link>https://radu-matei.com/blog/aspnet-core-docker-azure/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-docker-azure/</guid>
      <description>In this article, we will take the simplest ASP.NET Core application, run it with Docker locally, then create Continuous Integration and Continuous Deployment flows using a GitHub repository, Docker Cloud and an Azure virtual machine that will act as a node for Docker Cloud.</description>
    </item>
    <item>
      <title>ASP.NET Core MVC and SignalR Core</title>
      <link>https://radu-matei.com/blog/aspnet-core-mvc-signalr/</link>
      <pubDate>Fri, 09 Sep 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-mvc-signalr/</guid>
      <description>In this article we will explore how to get started with the Alpha 2 version of SignalR for ASP.NET Core 2.0 and understand streaming, sending binary data, using the Redis scaleout and, of course, chat!</description>
    </item>
    <item>
      <title>Inject ASP.NET Core Dependencies from JSON files</title>
      <link>https://radu-matei.com/blog/aspnet-core-json-dependency-injection/</link>
      <pubDate>Thu, 18 Aug 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-json-dependency-injection/</guid>
      <description>Back in the days of ASP.NET 4.x, each of the framework components - MVC, WebAPI, OWIN, SignalR - had its own dependency resolver and its own way of integrating with the framework. ASP.NET Core brings a consistent dependency injection mechanism with a unified meaning for lifetime or service registration,that is designed to server the needs of the framework and most consumer applications built on it. In this article, we will see a way of defining the service types and the implementation types we want to use based on a JSON file and switch between implementations without changing the code.</description>
    </item>
    <item>
      <title>Introduction to ASP .NET Core MVC API</title>
      <link>https://radu-matei.com/blog/aspnet-core-api/</link>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-api/</guid>
      <description>In this article we will be looking at ASP .NET Core MVC, more specifically at how to build an API that can be consumed from any type of application, be it web, mobile or desktop. We will build a very simple application that will enable the creation of posts (much like messages) and that will take us through adding the MVC services, creating models, controllers and consuming some data.</description>
    </item>
    <item>
      <title>ASP .NET Core JSON Configuration and Dependency Injection</title>
      <link>https://radu-matei.com/blog/aspnet-core-configuration-greeting/</link>
      <pubDate>Sat, 23 Jul 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-configuration-greeting/</guid>
      <description>The new configuration system provides support for JSON, XML, INI and for in-memory configuration, while also allowing you to create your custom configuration provider. Let&amp;rsquo;s assume that in our application we want the response messages not to be hard-coded in Startup anymore, but stored in a configuration file so we don&amp;rsquo;t have to stop, modify or recompile our application every time the messages or the routes change.</description>
    </item>
    <item>
      <title>ASP .NET Core Routing</title>
      <link>https://radu-matei.com/blog/aspnet-core-routing/</link>
      <pubDate>Wed, 20 Jul 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-routing/</guid>
      <description>So far we built simple web applications that responded with the same message for each request. However, any real-world application is going to need a more complex way of handling requests, so in this article we will see how to create route handlers for specific routes and how to extract parameters from the request URI - we will explore the low-level Routing API.</description>
    </item>
    <item>
      <title>ASP .NET Core Startup</title>
      <link>https://radu-matei.com/blog/aspnet-core-startup/</link>
      <pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-startup/</guid>
      <description>Any non-trivial application is going to need a mechanism to handle different types of requests and map them to specific services and middleware and configure services. This is accomplished through the &lt;code&gt;Startup&lt;/code&gt; class, which is also the entry point for any incoming HTTP request.</description>
    </item>
    <item>
      <title>ASP .NET Core Introduction</title>
      <link>https://radu-matei.com/blog/aspnet-core-getting-started/</link>
      <pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/aspnet-core-getting-started/</guid>
      <description>ASP.NET Core is a new open-source and cross-platform framework for building modern cloud based internet connected applications, such as web apps, IoT apps and mobile backends and a complete re-write of the 4.6 framework that came out last year and comes with a completely new architecture based on .NET Core. In this article we will see how to get started with ASP.NET Core.</description>
    </item>
    <item>
      <title>Getting Started with .NET Core and VS Code</title>
      <link>https://radu-matei.com/blog/dot-net-core-getting-started/</link>
      <pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/dot-net-core-getting-started/</guid>
      <description>We will see how to get started with VS Code and .NET Core</description>
    </item>
    <item>
      <title>Introduction to .NET Core</title>
      <link>https://radu-matei.com/blog/dot-net-core-introduction/</link>
      <pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate><author>radu@matei.ai (Radu Matei)</author>
      <guid>https://radu-matei.com/blog/dot-net-core-introduction/</guid>
      <description>Introduction to .NET Core</description>
    </item>
  </channel>
</rss>

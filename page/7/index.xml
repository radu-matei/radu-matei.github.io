<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>radu&#39;s blog</title>
    <link>https://radu-matei.com/</link>
    <description>Recent content on radu&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://twitter.com/matei_radu&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;Radu Matei&lt;/a&gt; 2023</copyright>
    <lastBuildDate>Wed, 22 Mar 2023 16:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://radu-matei.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    
    <item>
      <title>Writing controllers for Kubernetes CRDs with C#</title>
      <link>https://radu-matei.com/blog/kubernetes-controller-csharp/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/kubernetes-controller-csharp/</guid>
      <description>The goal of this article is to show you how to use the Kubernetes C# client to write extremely simple controllers for your Kubernetes custom resources, and start watching resources in a few lines of C#</description>
    </item>
    
    <item>
      <title>Instant Scaling on Demand: Serverless Kubernetes with Brigade</title>
      <link>https://radu-matei.com/blog/brigade-scaling-vk/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/brigade-scaling-vk/</guid>
      <description>This article originally appeared on the Microsoft open source blog .
Microservices built on Kubernetes are fast becoming one of the core scenarios where computing is done, and Kubernetes development and operations skills are therefore becoming a larger part of any cloud-native toolset. This article shows how to use some of the Cloud Native Computing Foundation (CNCF) and CNCF sandbox projects together to build a Kubernetes-native application that listens for events and then runs serverless pipelines on Virtual Kubelet instances, each of which are dynamically created (and recycled when the pipeline is done).</description>
    </item>
    
    <item>
      <title>Filter secrets from Kubernetes logs</title>
      <link>https://radu-matei.com/blog/filter-k8s-logs/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/filter-k8s-logs/</guid>
      <description>Running any non-trivial application on Kubernetes will most likely require authorized access to other components - databases, storage buckets, APIs - all of which require a connection string or some sort of access key. Storing these values in Kubernetes is done through Secrets , and while there are plenty of ways to make sure the secrets are safe while at rest , as well as how to configure an external KMS provider , once the secret is injected into your application container, its value will be plain text.</description>
    </item>
    
    <item>
      <title>The state of debugging microservices on Kubernetes</title>
      <link>https://radu-matei.com/blog/state-of-debugging-microservices-on-k8s/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/state-of-debugging-microservices-on-k8s/</guid>
      <description>For as long as we have been writing software, we have also introduced bugs in our applications. Back when we were developing monoliths, we could simply start the IDE of choice, add a couple of breakpoints, step through the code and hopefully solve the issue. There was a single place where the application was running, where logs were visible and where the application could be diagnosed.</description>
    </item>
    
    <item>
      <title>Debug Helm and Tiller using VS Code and Draft</title>
      <link>https://radu-matei.com/blog/debug-helm-tiller/</link>
      <pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/debug-helm-tiller/</guid>
      <description>In today&amp;rsquo;s article we will explore how to take a real-world application and start developing, debugging and deploying it to a Kubernetes cluster and how to use a couple of open-source tools to make our lives easier in the process. Specifically, we will use Helm, the package manager for Kubernetes , the newly released Kubernetes extension for VS Code and Draft to develop, debug and deploy is Helm itself.</description>
    </item>
    
  </channel>
</rss>
